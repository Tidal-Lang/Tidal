name: Rust Build Checks

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: windows
          - os: macos-13
            target: macos-x86
          - os: macos-latest
            target: macos-arm

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update
        
    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install -y mingw
        
    - name: Install Dependencies (macOS)
      if: contains(matrix.os, 'macos')
      run: which gcc >/dev/null || brew install gcc
        
    - name: Install Rust Dependencies (Universal)
      run: make install
        
    - name: Build Platform Binary
      run: make ${{ matrix.target }}
      
    - name: Upload Binary
      uses: actions/upload-artifact@v4
      with:
        name: tidal-${{ matrix.target }}
        path: |
          target/${{ contains(matrix.target, 'macos') && (matrix.target == 'macos-arm' && 'aarch64-apple-darwin' || 'x86_64-apple-darwin') || matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-gnu' }}/release/td${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        if-no-files-found: error
        
    - name: Run Tests
      run: make test
