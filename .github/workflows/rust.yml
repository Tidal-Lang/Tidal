name: Rust Build Checks

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            features: --features unix
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            features: --features windows
            target: x86_64-pc-windows-gnu

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Windows Dependencies
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: mingw-w64-x86_64-gcc
    
    - name: Clean
      run: cargo clean
      
    - name: Build
      run: cargo build --release --verbose ${{ matrix.features }} --target ${{ matrix.target }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tidal-${{ matrix.os }}
        path: target/${{ matrix.target }}/release/td${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        if-no-files-found: error
        
    - name: Run tests
      run: cargo test --verbose ${{ matrix.features }} --target ${{ matrix.target }}
